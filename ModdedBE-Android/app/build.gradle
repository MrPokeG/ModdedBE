/**
 * The first line in the build configuration applies the Android plugin for Gradle to this build and
 * makes the android block available to specify Android-specific build options.
 */
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

/**
 * The android block is where you configure all your Android-specific build options.
 */
android {
    /**
     * compileSdkVersion specifies the Android API level Gradle should use to compile your app. This
     * means your app can use the API features included in this API level and lower.
     */
    compileSdkVersion 'android-S'

    buildToolsVersion "30.0.3"

    /**
     * The defaultConfig block encapsulates default settings and entries for all build variants, and
     * can override some attributes in main/AndroidManifest.xml dynamically from the build system.
     */
    defaultConfig {
        /**
         * applicationId uniquely identifies the package for publishing. However, your source code
         * should still reference the package name defined by the package attribute in the
         * main/AndroidManifest.xml file.
         */
        applicationId "net.listerily.moddedbe"

        // Defines the minimum API level required to run the app.
        minSdkVersion 21

        // Specifies the API level used to test the app.
        targetSdkVersion 29

        // Defines the version number of your app.
        versionCode 2

        // Defines a user-friendly version name for your app.
        versionName "1.1"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    /**
     * The buildTypes block is where you can configure multiple build types. By default, the build
     * system defines two build types: debug and release. The debug build type is not explicitly
     * shown in the default build configuration, but it includes debugging tools and is signed with
     * the debug key. The release build type applies Proguard settings and is not signed by default.
     */
    buildTypes {
        release {
            minifyEnabled false

            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        buildConfigField "String", "BUILD_DATE", '"' + getCurrentDate() + '"'
    }
}

/**
 * The dependencies block in the module-level build configuration file specifies dependencies
 * required to build only the module itself.
 */
dependencies {
    // Compile endercore, and integrate with app
    api project(':endercore')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.android.gms:play-services-iid:17.0.0'
    implementation 'org.jetbrains:annotations:21.0.1'
    implementation "androidx.core:core-ktx:1.5.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

String getCurrentDate() {
    Date date = new Date()
    return date.format("yyyy-MM-dd", TimeZone.getTimeZone("Asia/Shanghai"))
}
